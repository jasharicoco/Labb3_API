// <auto-generated />
using Labb3_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb3_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428082117_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InterestLink", b =>
                {
                    b.Property<int>("InterestsId")
                        .HasColumnType("int");

                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.HasKey("InterestsId", "LinksId");

                    b.HasIndex("LinksId");

                    b.ToTable("InterestLink");

                    b.HasData(
                        new
                        {
                            InterestsId = 1,
                            LinksId = 1
                        },
                        new
                        {
                            InterestsId = 1,
                            LinksId = 2
                        },
                        new
                        {
                            InterestsId = 2,
                            LinksId = 3
                        },
                        new
                        {
                            InterestsId = 2,
                            LinksId = 4
                        },
                        new
                        {
                            InterestsId = 3,
                            LinksId = 5
                        },
                        new
                        {
                            InterestsId = 3,
                            LinksId = 6
                        },
                        new
                        {
                            InterestsId = 4,
                            LinksId = 8
                        },
                        new
                        {
                            InterestsId = 5,
                            LinksId = 14
                        },
                        new
                        {
                            InterestsId = 5,
                            LinksId = 15
                        },
                        new
                        {
                            InterestsId = 6,
                            LinksId = 9
                        },
                        new
                        {
                            InterestsId = 7,
                            LinksId = 10
                        },
                        new
                        {
                            InterestsId = 8,
                            LinksId = 11
                        },
                        new
                        {
                            InterestsId = 9,
                            LinksId = 12
                        },
                        new
                        {
                            InterestsId = 10,
                            LinksId = 13
                        });
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.Property<int>("InterestsId")
                        .HasColumnType("int");

                    b.Property<int>("PersonsId")
                        .HasColumnType("int");

                    b.HasKey("InterestsId", "PersonsId");

                    b.HasIndex("PersonsId");

                    b.ToTable("InterestPerson");

                    b.HasData(
                        new
                        {
                            InterestsId = 1,
                            PersonsId = 3
                        },
                        new
                        {
                            InterestsId = 3,
                            PersonsId = 3
                        },
                        new
                        {
                            InterestsId = 2,
                            PersonsId = 4
                        },
                        new
                        {
                            InterestsId = 5,
                            PersonsId = 4
                        },
                        new
                        {
                            InterestsId = 6,
                            PersonsId = 5
                        },
                        new
                        {
                            InterestsId = 7,
                            PersonsId = 5
                        },
                        new
                        {
                            InterestsId = 8,
                            PersonsId = 5
                        });
                });

            modelBuilder.Entity("Labb3_API.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("InterestName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cykla för att uppnå själsligt välmående.",
                            InterestName = "Cykling"
                        },
                        new
                        {
                            Id = 2,
                            Description = "En utmaning som enbart de allra djärvaste av människor vågar sig på.",
                            InterestName = "Bergsklättring"
                        },
                        new
                        {
                            Id = 3,
                            Description = "För att det är kul.",
                            InterestName = "Resa"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Konsten att återhämta sig.",
                            InterestName = "Vila"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Bygg dina egna applikationer och hemsidor med mera.",
                            InterestName = "Programmering"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Kasta bollen och spring för att vinna.",
                            InterestName = "Fotboll"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Kreativitet i köket!",
                            InterestName = "Matlagning"
                        },
                        new
                        {
                            Id = 8,
                            Description = "För att förstå världen omkring oss.",
                            InterestName = "Fysik"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Kreativa uttryck för själens bästa.",
                            InterestName = "Konst"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Filmer för att fånga fantasin.",
                            InterestName = "Film"
                        });
                });

            modelBuilder.Entity("Labb3_API.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Information om cykling. Hur man gör osv.",
                            Name = "Cykling.se",
                            Url = "https://www.cykling.se"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Information om turer runtom i landet.",
                            Name = "Cykelturer.se",
                            Url = "https://www.cykelturer.se"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Information om bergsklättring.",
                            Name = "Bergsklättring.se",
                            Url = "https://www.bergsklattring.se"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Information om alla faror kopplade till bergsklättring.",
                            Name = "KlättraBerg.se",
                            Url = "https://www.klattraberg.se"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Hitta dina resor här.",
                            Name = "Ving.se",
                            Url = "https://www.ving.se"
                        },
                        new
                        {
                            Id = 6,
                            Description = "En till sida att hitta sina resor på.",
                            Name = "Apollo.se",
                            Url = "https://www.apollo.se"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Sök billiga flyg.",
                            Name = "Flygresor.se",
                            Url = "https://www.flygresor.se"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Lär dig vila.",
                            Name = "Meditation.se",
                            Url = "https://www.meditation.se"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Allt om fotboll.",
                            Name = "Fotboll.se",
                            Url = "https://www.fotboll.se"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Bästa recepten online.",
                            Name = "Matlagning.se",
                            Url = "https://www.matlagning.se"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Lär dig fysik genom roliga experiment.",
                            Name = "Astro.se",
                            Url = "https://www.astro.se"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Se konst från hela världen.",
                            Name = "Konst.se",
                            Url = "https://www.konst.se"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Streama filmer och tv-serier.",
                            Name = "Film.se",
                            Url = "https://www.film.se"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Lägg upp dina projekt här.",
                            Name = "Github.com",
                            Url = "https://www.github.com"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Lär dig mer om programmering.",
                            Name = "StackOverflow.com",
                            Url = "https://www.stackoverflow.com"
                        });
                });

            modelBuilder.Entity("Labb3_API.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alexander@ek.se",
                            FirstName = "Alexander",
                            LastName = "Ek",
                            PhoneNumber = "070-1234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "serhan@gyuler.uk",
                            FirstName = "Serhan",
                            LastName = "Gyuler",
                            PhoneNumber = "070-7654321"
                        },
                        new
                        {
                            Id = 3,
                            Email = "petter@bostrom.se",
                            FirstName = "Petter",
                            LastName = "Boström",
                            PhoneNumber = "070-1122334"
                        },
                        new
                        {
                            Id = 4,
                            Email = "leon@jashari.se",
                            FirstName = "Leon",
                            LastName = "Jashari",
                            PhoneNumber = "070-5566778"
                        },
                        new
                        {
                            Id = 5,
                            Email = "joel@mako.se",
                            FirstName = "Joel",
                            LastName = "Mako",
                            PhoneNumber = "070-9988776"
                        });
                });

            modelBuilder.Entity("LinkPerson", b =>
                {
                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.Property<int>("PersonsId")
                        .HasColumnType("int");

                    b.HasKey("LinksId", "PersonsId");

                    b.HasIndex("PersonsId");

                    b.ToTable("LinkPerson");

                    b.HasData(
                        new
                        {
                            LinksId = 1,
                            PersonsId = 3
                        },
                        new
                        {
                            LinksId = 2,
                            PersonsId = 3
                        },
                        new
                        {
                            LinksId = 3,
                            PersonsId = 4
                        },
                        new
                        {
                            LinksId = 14,
                            PersonsId = 4
                        },
                        new
                        {
                            LinksId = 15,
                            PersonsId = 4
                        },
                        new
                        {
                            LinksId = 4,
                            PersonsId = 5
                        },
                        new
                        {
                            LinksId = 5,
                            PersonsId = 3
                        },
                        new
                        {
                            LinksId = 6,
                            PersonsId = 4
                        },
                        new
                        {
                            LinksId = 7,
                            PersonsId = 5
                        },
                        new
                        {
                            LinksId = 8,
                            PersonsId = 5
                        });
                });

            modelBuilder.Entity("InterestLink", b =>
                {
                    b.HasOne("Labb3_API.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb3_API.Models.Link", null)
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.HasOne("Labb3_API.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb3_API.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LinkPerson", b =>
                {
                    b.HasOne("Labb3_API.Models.Link", null)
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb3_API.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
